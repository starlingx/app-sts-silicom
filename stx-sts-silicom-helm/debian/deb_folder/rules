#!/usr/bin/make -f
# export DH_VERBOSE = 1

export ROOT = debian/tmp
export APP_FOLDER = $(ROOT)/usr/local/share/applications/helm

export DEB_VERSION = $(shell dpkg-parsechangelog | egrep '^Version:' | cut -f 2 -d ' ')
export RELEASE = $(shell echo $(DEB_VERSION) | cut -f 1 -d '-')
export REVISION = $(shell echo $(DEB_VERSION) | cut -f 4 -d '.')

export STS_SILICOM_PKG="helm-charts-sts-silicom-6003ef8.tar.gz"
export APP_NAME = sts-silicom
export APP_VERSION = $(RELEASE)-$(REVISION)
export APP_TARBALL_FLUXCD = $(APP_NAME)-$(APP_VERSION).tgz
export HELM_REPO = stx-platform
export STAGING = staging

%:
	dh $@

override_dh_auto_build:
	# Host a server for the helm charts.
	chartmuseum --debug --port=8879 --context-path='/charts' --storage="local" --storage-local-rootdir="." &
	sleep 2
	helm repo add local http://localhost:8879/charts

	# Extract the sts-silicom chart
	rm -rf fluxcd
	mkdir -p fluxcd
	tar -C fluxcd -xf helm-charts-sts-silicom-6003ef8.tar.gz

	# Apply patches
	cd fluxcd/helm-charts/ && patch --no-backup-if-mismatch --fuzz=0 -p1 < ../../files/0001-Fix-whitespace-chomping-in-services-manifest.patch
	cd fluxcd/helm-charts/ && patch --no-backup-if-mismatch --fuzz=0 -p1 < ../../files/0002-Add-imagePullSecrets-to-service-account.patch
	cd fluxcd/helm-charts/ && patch --no-backup-if-mismatch --fuzz=0 -p1 < ../../files/0003-Add-imagePullSecrets-to-daemonset.patch

	# Build the charts
	cd fluxcd/helm-charts/ && export HELM=helm && $(MAKE) chart

	# Terminate the helm chart server.
	pkill chartmuseum

	# Setup the staging directory.
	mkdir -p $(STAGING)/charts

	# Copy the fluxcd manifests
	cp -R fluxcd-manifests/ $(STAGING)/

	# Copy the built chart to staging
	cp fluxcd/helm-charts/output/sts-silicom-*.tgz $(STAGING)/charts/

	# Populate metadata.
	cp files/metadata.yaml $(STAGING)
	sed -i 's/@APP_NAME@/$(APP_NAME)/g' $(STAGING)/metadata.yaml
	sed -i 's/@APP_VERSION@/$(APP_VERSION)/g' $(STAGING)/metadata.yaml
	sed -i 's/@HELM_REPO@/$(HELM_REPO)/g' $(STAGING)/metadata.yaml

	# Copy the plugins: installed in the buildroot
	mkdir -p $(STAGING)/plugins
	cp /plugins/*.whl $(STAGING)/plugins

	# Generate checksum file and package the tarball
	cd $(STAGING) && find . -type f ! -name '*.md5' -print0 | xargs -0 md5sum > checksum.md5
	tar -zcf $(APP_TARBALL_FLUXCD) -C $(STAGING)/ .

	# Cleanup staging
	rm -rf $(STAGING)

override_dh_auto_install:
	# Install the app tar file.
	install -d -m 755 $(APP_FOLDER)
	install -p -D -m 755 $(APP_TARBALL_FLUXCD) $(APP_FOLDER)

override_dh_auto_test:

override_dh_usrlocal:
